d1 <- read.csv("https://raw.githubusercontent.com/marcel0501/Obesity-classifier-and-BMI-regression/refs/heads/main/Final_data.csv",
sep = ",")
head(d1)
sapply(d1, function(x)(sum(is.na(x))))# No MISSING VALUES
######Exploratory Analysis######
d2 <- d1[,c("Age", "Workout_Frequency..days.week.","Daily.meals.frequency","Weight..kg.","Height..m.","Gender","Session_Duration..hours.","Calories_Burned","Water_Intake..liters.","Fat_Percentage","Proteins","Carbs","Fats","diet_type","sugar_g",
"sodium_mg","cholesterol_mg", "lean_mass_kg","BMI")]
#Notiamo che alcune variabili e.g. AGE, Workout_frequency... hanno valori float essendo stati imputati o creati artificialmente, arrotondiamoli all'int più vicino
round_numeric_df <- function(df, include = NULL) {
df[] <- lapply(names(df), function(col_name) {
# Se la colonna è numerica ed è tra quelle incluse
if (is.numeric(df[[col_name]]) && (col_name %in% include)) {
return(round(df[[col_name]]))
} else {
return(df[[col_name]])
}
})
# Mantieni i nomi originali delle colonne
names(df) <- names(df)
return(df)
}
d2 <- round_numeric_df(d2, include = c("Age", "Workout_Frequency..days.week.","Daily.meals.frequency"))
summary(d1)
#Pairs Panels on numerical variables
#
#
#
#####Starting with Regression Analysis####
#Trasformiamo le variabili categoriche in factor
d2[] <- sapply(d2, function(x) {
if (is.character(x)) as.factor(x) else x
})
#Check colinearity
#vettore delle colonne
fit <- lm(Calories_Burned ~ ., data = d2)
summary(fit)
cov=attr(terms(fit), "term.labels")
library(dplyr)
exclude <- c("Fats","Carbs","Weight..kg.","cholesterol_mg","BMI")
d2_numeric <- d2 |>
dplyr::select(dplyr::all_of(cov)) |>
dplyr::select(!dplyr::any_of(exclude)) |>
dplyr::select(dplyr::where(is.numeric))
#Tol e VIF
y = as.numeric(d2$Calories_Burned)
X<-d2_numeric
X=as.matrix(X)
library(mctest)
# imcdiag(X,y)
